<launch>
  <!-- Arguments -->
  <arg name="waypoints_data_file" default="$(find ws_turtlebro_package)/data/goals.xml" />
  <arg name="fake_move_base" default="true"/>

  <!--Aruco view service -->
  <node pkg="ws_turtlebro_package" type="aruco_service.py" name="aruco_detect_server" output="screen" required="true" />

  <!--Speech point service -->
  <node pkg="ws_turtlebro_package" type="point_service_view.py" name="excursion_point_service" output="screen" required="true" />

  <!--Fake move base -->
  <group if="$(arg fake_move_base)">
    <node pkg="ws_turtlebro_package" type="fake_move_base.py" name="fake_move_base" output="screen" required="true"/>
  </group>

  <!--Navigation -->
  <group unless="$(arg fake_move_base)">  
    <include file="$(find turtlebro_navigation)/launch/turtlebro_slam_navigation.launch">
        <arg name="open_rviz" value="False"/>
    </include>
  </group>

  <!--Patrol Node -->
  <node pkg="ws_turtlebro_package" type="patrol.py" name="turtlebro_patrol" output="screen" required="true">
    <param name="waypoints_data_file" value="$(arg waypoints_data_file)"/>    
    <param name="point_callback_service" value="turtlebro_heat_excursion"/>    
  </node>
  
  <!--Heat sensor Node-->
  <node pkg="ws_turtlebro_package" type="overheat_sensor.py" name="heat_sensor" output="screen">
    <param name="threshold" value="55"/>
    <param name="heat_pixels_topic" value="amg88xx_pixels"/>
  </node>

  <!--Heat speaker Node -->
  <node pkg="ws_turtlebro_package" type="heat_speaker.py" name="heat_speaker" output="screen" required="true" />
 
</launch>
